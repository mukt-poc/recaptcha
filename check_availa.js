
var abc = function(){
var u = function() {
        "use strict";
        var t = {
            production: !0,
            lso: "6LdY-IUUAAAAACOW46urZoIjA7nzPrDToM0KSnfT",
            pp1: "pnr",
            pp2: "avlfare"
        }
        return {"a" : t};
    }();

var ngx_captcha_onload_callback = function() {
              var y = function(O, d) {
            function h() {}((O.prototype = new(O.O = (h.prototype = d.prototype, d).prototype, h), O.prototype).constructor = O, O).Vo = function(O, h, Z) {
                for (var Q = Array(arguments.length - 2), V = 2; V < arguments.length; V++) Q[V - 2] = arguments[V];
                return d.prototype[h].apply(O, Q)
            }
        }
 var pw = function(d, h) {
                       if(0 == d.indexOf(")]}'\n") && (d = d.substring(5))) try {
                        h = E.JSON.parse(d);
                       
                    } catch (Q) {}
                    h = cX(d);
     
                return h;
            
        };
var U4 = function(O, d) {
            if (Error.captureStackTrace) Error.captureStackTrace(this, U4);
            else if (d = Error().stack) this.stack = d;
            O && (this.message = String(O))
        };
var J0 = function(O) {
            U4.call(this, "Error in protected function: " + (O && O.message ? String(O.message) : String(O))), (O = O && O.stack) && f(O) && (this.stack = O)
        };
var cX = (y(J0, U4), function(O) {
            if (q4((O = String(O), O))) try {
                return eval("(" + O + ")")
            } catch (d) {}
            throw Error("Invalid JSON string: " + O);
        });
        var q4 = function(O) {
            return /^\s*$/.test(O) ? !1 : /^[\],:{}\s\u2028\u2029]*$/.test(O.replace(/\\["\\\/bfnrtu]/g, "@").replace(/(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g,
                "]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g, ""))
        };
    var data = '[\x22ainput\x22,[\x22bgdata\x22,\x22Ly93d3cuZ29vZ2xlLmNvbS9qcy9iZy84bkJYT3BrVmpjOE00UDQtVEtfM3RQbUNyZFBlajJEOU8wSldlaFFZTWFVLmpz\x22,\x22\x22,\\\u003d\\u003d\x22]\n,null,[\x22conf\x22,null,\x226LdY-IUUAAAAACOW46urZoIjA7nzPrDToM0KSnfT\x22,0,null,[\x22JS_FASTCLICK\x22,\x22JS_BFRAME\x22,\x22JS_MC_FETCH\x22]\n,1.0]\n,\x22https://www.irctc.co.in:443\x22,[\x22ctask\x22,[[\x22hctask\x22,\x2263c3da2e\x22,\x2218758abfb7af98332a0a0227a7ec87ffd97eda8926c9113390faab6370092520\x22,0,100]\n,[\x22hctask\x22,\x2287facc43\x22,\x225b1b9323c5db23d56d50cf970c103f89b1f55fae1e983be7dd2a7f1814aec63e\x22,0,100]\n,[\x22hctask\x22,\x22f4a5f1df\x22,\x22c0067541a45a04950854dea334c91139a4c03447383f1c35788e99dc9efc77f5\x22,0,100]\n]\n,\x22/recaptcha/api2/webworker.js\x22]\n,[3,1,1]\n,null,null,[\x22ftask\x22,[23,18]\n]\n,1,3600,[\x22https://www.google.com/intl/en/policies/privacy/\x22,\x22https://www.google.com/intl/en/policies/terms/\x22]\n]\n'
          
    console.log(pw(data));
     
};
var L = function(O, d, h, Q) {
            O.X = d;
    O.M = 0;
            a: {
                if (d = O.X.length)
                    if (--d, h = O.X[d], !(null === h || "object" != typeof h || h instanceof Uint8Array)) {
                        O.l = (O.L = d - O.M, h);
                        break a
                    }
            }
        }
setTimeout(ngx_captcha_onload_callback(), 15000000);

    
    
}()
